#!/usr/bin/env python3

import sys
from math import *

def get_min(sample) -> (float):
    if (sample < 0):
        return 0.0
    else:
        return sample

def get_max(sample) -> (float):
    if (sample > 100):
        return 100.0
    else:
        return sample

def poll(pSize, sSize, p):
    p = p / 100
    variance = ((p * (1 - p)) / sSize) * ((pSize - sSize) / (pSize - 1))
    p1 = (2 * 1.96 * sqrt(variance)) / 2 * 100
    p2 = (2 * 2.58 * sqrt(variance)) / 2 * 100
    print("Population size:\t   %d" %(pSize))
    print("Sample size:\t\t   %d" %(sSize))
    print("Voting intentions:\t   %s%%" %(sys.argv[3]))
    print("Variance:\t\t   %0.6f" %(variance))
    print("95%% confidence interval:  [", end='')
    print("%0.2f%%" %(get_min(p * 100 - p1)), end='')
    print(" ; ", end='')
    print("%0.2f%%" %(get_max(p * 100 + p1)), end='')
    print("]")
    print("99%% confidence interval:  [", end='')
    print("%0.2f%%" %(get_min(p * 100 - p2)), end='')
    print(" ; ", end='')
    print("%0.2f%%" %(get_max(p * 100 + p2)), end='')
    print("]")

if (len(sys.argv) != 4):
    if (len(sys.argv) == 2 & sys.argv[1] == "-h"):
        print("USAGE\n\t./209poll pSize sSize p\n\nDESCRIPTION\n\tpSize\tsize of the population\n\tsSize\tsize of the sample (supposed to be representative)\n\tp\tpercentage of voting intentions for a specific candidate")
    else:
        print ("Error: not the right number of argument")
    exit(84)
else:
    try:
        pSize = int(sys.argv[1])
        sSize = int(sys.argv[2])
        p = float(sys.argv[3])
        if (pSize <= 0):
            print("Error : pSize must be a strictly positive number")
            exit(84)
        elif (sSize >= pSize or sSize <= 0):
            print("Error : sSize can't be superior to pSize and must be strictly positive")
            exit(84)
        elif (p < 0 or p > 100):
            print("Error : p must be between 0% and 100%")
            exit(84)
        elif (pSize - 1 < 0):
            print("Error : Division by zero")
            exit(84)
        poll(pSize, sSize, p)
        exit(0)
    except ValueError:
        print ("Error : Not the right type of parameter !")
        exit(84)